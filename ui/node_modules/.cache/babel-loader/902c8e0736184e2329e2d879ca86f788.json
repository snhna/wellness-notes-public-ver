{"ast":null,"code":"var _jsxFileName = \"/Users/kamille/Documents/GitHub/Wellness-Notes/ui/src/components/SongSection/index.js\";\nimport React from 'react';\nimport './Song.css';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { Container, Link, ButtonContainer } from \"./SongElements\";\nimport SpotifyPlayer from 'react-spotify-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongPage() {\n  // List version with previews only\n  const size = {\n    width: '100%',\n    height: 375\n  };\n  const view = 'list'; // or 'coverart'\n\n  const theme = 'white'; // or 'black'\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      uri: \"spotify:playlist:37i9dQZF1DXdQvOLqzNHSW\",\n      size: size,\n      view: view,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        className: \"next_icon__Link\",\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SongPage;\nexport default SongPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPage\");","map":{"version":3,"sources":["/Users/kamille/Documents/GitHub/Wellness-Notes/ui/src/components/SongSection/index.js"],"names":["React","ArrowForwardIcon","Container","Link","ButtonContainer","SpotifyPlayer","SongPage","size","width","height","view","theme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,eAA1B,QAAiD,gBAAjD;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;AAEA,SAASC,QAAT,GAAoB;AAChB;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GAAb;AAIA,QAAMC,IAAI,GAAG,MAAb,CANgB,CAMK;;AACrB,QAAMC,KAAK,GAAG,OAAd,CAPgB,CAOO;;AACvB,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,GAAG,EAAC,yCADR;AAEI,MAAA,IAAI,EAAEJ,IAFV;AAGI,MAAA,IAAI,EAAEG,IAHV;AAII,MAAA,KAAK,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eAOU;AAAA;AAAA;AAAA;AAAA,YAPV,eAQI,QAAC,eAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,OAAV;AAAkB,QAAA,SAAS,EAAC,iBAA5B;AAAA,+BAA8C,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KAtBQL,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport './Song.css';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { Container, Link, ButtonContainer } from \"./SongElements\"\nimport SpotifyPlayer from 'react-spotify-player'\n\nfunction SongPage() {\n    // List version with previews only\n    const size = {\n        width: '100%',\n        height: 375,\n      };\n    const view = 'list'; // or 'coverart'\n    const theme = 'white'; // or 'black'\n    return(\n        <Container>           \n            <SpotifyPlayer\n                uri=\"spotify:playlist:37i9dQZF1DXdQvOLqzNHSW\"\n                size={size}\n                view={view}\n                theme={theme}\n            />\n            <br /><br />\n            <ButtonContainer>\n                <Link to =\"/home\" className=\"next_icon__Link\"><ArrowForwardIcon /></Link>\n            </ButtonContainer>\n        </Container>\n    );\n}\nexport default SongPage;"]},"metadata":{},"sourceType":"module"}